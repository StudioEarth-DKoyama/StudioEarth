package uriage;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import uriageEntity.Branch;
import uriageEntity.Commodity;

/**
 *ファイル操作を扱うクラス
 *@author t_koyamadc
 */
class ReadFile {

	private String commonPath = "C:\\Users\\t_koyamadc\\Documents\\uriageData";
	private String braPath = commonPath + "‪\\branch.lst";
	private String comPath = commonPath + "\\commodity.lst";

	private String branch= "支店定義";
	private String commodity = "商品定義";

	/**
	 * ファイルの存在チェック
	 * */
	public void checkFile() {

		List<String> errMsgLst = new ArrayList<String>();

		File braFile = new File(commonPath + braPath);

		if(!(braFile.exists())) {
			errMsgLst.add("支店定義ファイルがありません。");
		}

		File comFile = new File(commonPath + comPath);

		if(!(comFile.exists())) {
			errMsgLst.add("商品定義ファイルがありません。");
		}

		if (errMsgLst.size() != 0) {

			for (String eml : errMsgLst) {
				System.out.println(eml);
			}

			System.out.println("処理を終了します");
			System.exit(0);

		}
	}

	/**
	 * branchファイルを処理
	 **/
	public List<Branch> readBranch() {

		//ファイルを読み込む
		File file = new File(commonPath + braPath);

		List<Branch> braList = new ArrayList<Branch>();
		if (file.exists()){
		    try {
		        //ファイルを読み込む
		        FileReader fr = new FileReader(file.toString());
		        BufferedReader br = new BufferedReader(fr);

		        //1行ずつ読みこんで格納
		        String line;

		        while ((line = br.readLine()) != null) {

		        	String[] cols = line.split(",", -1);
	        		//Branchエンティティに格納
	        		Branch bra = new Branch();
	        		bra.setBranchName(cols[0]);
	        		bra.setBranchName(cols[1]);

	        		braList.add(bra);

		        }

		        //終了処理
		        br.close();
		        fr.close();

		    } catch (IOException ex) {
		        //例外発生時処理
		        System.out.println(ex);
		    }

		}else{
			//処理終了
		    System.out.println(branch + "ファイルが存在しません");

		}

		return braList;
	}

	/**
	 * commodityファイルを処理
	 **/
	public List<Commodity> readCommodity() {

		//ファイルを読み込む
		File file = new File(commonPath + comPath);
		List<Commodity> comList = new ArrayList<Commodity>();

		if (file.exists()){

			try {
		        //ファイルを読み込む
		        FileReader fr = new FileReader(file.toString());
		        BufferedReader br = new BufferedReader(fr);

		        //1行ずつ読みこんで格納
		        String line;

		        while ((line = br.readLine()) != null) {

		        	String[] cols = line.split(",", -1);
	        		//Branchエンティティに格納
		        	Commodity com = new Commodity();
	        		com.setCommodityNumber(cols[0]);
	        		com.setCommodityName(cols[1]);

	        		comList.add(com);

		        }

		        //終了処理
		        br.close();
		        fr.close();

		    } catch (IOException ex) {
		        //例外発生時処理
		        System.out.println(ex);
		    }

		}else{
			//処理終了
		    System.out.println(branch + "ファイルが存在しません");

		}

		return comList;

	}
}
